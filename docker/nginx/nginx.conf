user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    default_type  application/octet-stream;
    include /etc/nginx/mime.types;
    root    /usr/share/nginx/html;
    index   index.html index.htm;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    #sendfile        on;
    sendfile  off;  # Disable Caching
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    server {
        listen 8080 ssl;
        listen [::]:8080 ssl;

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;
        
        ## LetsEncrypt Dev Certs
        error_page 497  https://$host:$server_port$request_uri;
        
        # Attempt to forward to the dev server.
        location /api {
            
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header Host 0.0.0.0;
            # proxy_set_header X-NginX-Proxy true;

            proxy_pass http://host.docker.internal:4441; break;
        }

        # All Other Requests return index.html
        location / {
          include /etc/nginx/mime.types;
          try_files $uri $uri/ /index.html;
        }
    }

    #
    server {
        listen 80 ssl;
        listen [::]:80 ssl;
        
        include /etc/nginx/snippets/ssl-params.conf;

        ## LetsEncrypt Dev Certs
        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;
        
        #Redirect to SSL
        error_page 497  https://$host:$server_port$request_uri;

        #charset koi8-r;
        #access_log  /var/log/nginx/log/host.access.log  main;
            
        # All Other Requests
        location /n/test {
            # Say hello
            return 200 '{"message": "Hello World."}';
            default_type application/json;
            add_header Content-Type application/json;
        }

        location / {
            # add_header 'Access-Control-Allow-Origin' '*';
            # add_header 'Access-Control-Allow-Methods' 'GET,PUT,POST,OPTIONS';
            # add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
            
            # rewrite /api(.*) $1 break;
            
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host 0.0.0.0;
            proxy_set_header X-NginX-Proxy true;

            proxy_pass https://host.docker.internal:4000; break;
        }

    }

}
